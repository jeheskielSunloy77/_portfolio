---
import { dictionary } from '@/i18n/dictionary'
import type { Language } from '@/i18n/i18n'
import { PROJECTS } from '@/lib/constants'
import { Image } from 'astro:assets'
import { Badge } from './ui/badge'
import { Card, CardContent, CardFooter, CardHeader, CardTitle } from './ui/card'

export interface Props {
	limit?: number
	isFeatured?: boolean
	lang: Language
}

const { limit, isFeatured }: Props = Astro.props

const filteredProjects = isFeatured
	? PROJECTS.filter((p) => p.isFeatured)
	: PROJECTS

const projects = limit ? filteredProjects.slice(0, limit) : filteredProjects

const t = dictionary[Astro.props.lang]
---

<section class='grid grid-cols-1 gap-4 sm:grid-cols-2'>
	{
		projects.map((project) => (
			<Card className='flex flex-col'>
				<CardHeader>
					{project.image && (
						<a href={project.href || project.image?.src}>
							<Image
								src={project.image}
								alt={t[project.name]}
								width={500}
								height={300}
								class='h-40 w-full object-cover object-top rounded-lg'
							/>
						</a>
					)}
				</CardHeader>
				<CardContent className='flex flex-col gap-2'>
					<CardTitle>{t[project.name]}</CardTitle>
					<div class='max-w-full text-pretty font-sans text-xs text-muted-foreground'>
						{t[project.description]}
					</div>
				</CardContent>
				<CardFooter className='flex h-full flex-col items-start justify-between gap-4'>
					{project.tags && project.tags.length > 0 && (
						<div class='mt-2 flex flex-wrap gap-1'>
							{project.tags.toSorted().map((tag) => (
								<Badge key={tag} className='px-1 py-0 text-[10px]' variant='secondary'>
									{tag}
								</Badge>
							))}
						</div>
					)}
					{!!project.links?.length && (
						<div class='flex flex-row flex-wrap items-start gap-1'>
							{project.links.toSorted().map((link, idx) => (
								<a href={link?.href} target='_blank'>
									<Badge
										key={idx}
										className='flex gap-2 px-2 py-1 text-[10px]'
										variant={idx === 0 ? 'default' : 'secondary'}
									>
										<link.icon className='size-3' />
										{t[link.name]}
									</Badge>
								</a>
							))}
						</div>
					)}
				</CardFooter>
			</Card>
		))
	}
</section>
